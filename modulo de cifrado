letrasm = "abcdefghijklmñnopqrstuvwxyz"
LETRASM = letrasm.upper()
letras = letrasm + LETRASM

def EncBin(msg):
    """Función de encriptación
         en binario"""
    nmsg = ""
    for caracter in msg:
        for letra in letras:
            if caracter == letra:
                binario = (bin(letras.index(caracter)))[2:len(letras)]  # Se halla el valor binario de la letra
                nbin = binario.zfill(6) #Se rellena el número hallado con ceros para mantener un formato de longitud 6
                nmsg += nbin
        if caracter == " ":  # remplazaremos los espacios en blanco por un guion bajo
            nmsg += "_"
    return nmsg
        

         
def DscBin(msg):
    """Función para desencriptar binario
        """
    contador = 0
    nmsg = ""
    while contador < len(msg):  # Ejecuta la función mientras existan letras por descifrar
        binario = msg[contador: contador + 6]
        if binario[0] == "_":
            contador += 1
            binario = msg[contador: contador + 6]
            nmsg += " "  # Se agregan espacios y se saltan en el contador
        for letra in letras:
            binlet = (bin(letras.index(letra)))[2:len(letras)] 
            if binario == binlet.zfill(6):  # Se encuentra la letra que cumpla el valor binario según el formato
                nmsg += letra
        contador += 6
    return nmsg
    
                
def EncCsr(msg, clave):
    """Función de encriptar en cifrado césar
        """
    nmsg = ""
    limit = len(letras)
    contador = 0
    for caracter in msg:
        if caracter == " ":
            nmsg += "_"
        else:
            indCsr = letras.index(caracter) + letras.index(clave[contador]) + 1  # Cambia la letra según el valor del indice del contador, se agrega 1 para evitar el 0
            if indCsr > limit:
                indCsr -= limit #  Si el indice es mayor a lo posible se repite 
            nmsg += letras[indCsr]
            contador += 1
            if contador == len(ticker):
                contador = 0
    return nmsg
    

def DscCsr(msg, clave):
    """Función de desencripar cifrado césar
    """me gustanlas cosas azules
    nmsg = ""
    contador = 0
    for caracter in msg:
        if caracter == "_":
            nmsg += " "
        else:
            indCsr = letras.index(caracter) - letras.index(clave[contador]) - 1  # Cambia la letra según el valor del indice del contador, se resta 1 para evitar el 0 
            nmsg += letras[indCsr]
            contador += 1
            if contador == len(ticker):
                contador = 0me gustanlas cosas azules
    return nmsg
    

#Beginning of execution
msg = input()
ticker = "whale"

print(EncBin(msg))
print(DscBin(EncBin(msg)))

print(EncCsr(msg, ticker))
print(DscCsr(EncCsr(msg, ticker), ticker))
